{"remainingRequest":"/media/batman/New Volume1/Projects/Vue/vuecal/node_modules/vue-loader/lib/index.js??vue-loader-options!/media/batman/New Volume1/Projects/Vue/vuecal/src/components/Calculator.vue?vue&type=style&index=0&id=e835979c&scoped=true&lang=css&","dependencies":[{"path":"/media/batman/New Volume1/Projects/Vue/vuecal/src/components/Calculator.vue","mtime":1557594619798},{"path":"/media/batman/New Volume1/Projects/Vue/vuecal/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/media/batman/New Volume1/Projects/Vue/vuecal/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/media/batman/New Volume1/Projects/Vue/vuecal/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/media/batman/New Volume1/Projects/Vue/vuecal/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/batman/New Volume1/Projects/Vue/vuecal/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.calculator{\n    margin: 0 auto;\n    width: 400px;\n    font-size: 40px;\n    display: grid;\n    grid-template-columns: repeat(4, 1fr);\n    grid-auto-rows: minmax(50px, auto);\n}\n.display{\n    grid-column: 1 / 5;\n    background-color: black;\n    color: white;\n}\n.zero{\n    grid-column: 1 / 3;\n}\n.btn{\n    background-color: #f2f2f2;\n    border: 1px solid #333;\n    cursor: pointer\n}\n.operator{\n    background-color: orange;\n}\n.displayunder{\n    grid-column: 1 / 2;\n    background-color: darkgray;\n    color: white;\n}\n",{"version":3,"sources":["Calculator.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Calculator.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div class=\"calculator\">\n        <div class=\"display\">{{ current || '0' }}</div>\n        <div @click=\"clear\" class=\"btn\">C</div>\n        <div @click=\"sign\" class=\"btn\">+/-</div>\n        <div @click=\"percent\" class=\"btn\">%</div>\n        <div @click=\"divide(current)\" class=\"btn operator\">/</div>\n        <div @click=\"append('7')\" class=\"btn\">7</div>\n        <div @click=\"append('8')\" class=\"btn\">8</div>\n        <div @click=\"append('9')\" class=\"btn\">9</div>\n        <div @click=\"multip(current)\" class=\"btn operator\">*</div>\n        <div @click=\"append('4')\" class=\"btn\">4</div>\n        <div @click=\"append('5')\" class=\"btn\">5</div>\n        <div @click=\"append('6')\" class=\"btn\">6</div>    \n        <div @click=\"subst(current)\" class=\"btn operator\">-</div>\n        <div @click=\"append('1')\" class=\"btn\">1</div>\n        <div @click=\"append('2')\" class=\"btn\">2</div>\n        <div @click=\"append('3')\" class=\"btn\">3</div>\n        <div @click=\"addit(current)\" class=\"btn operator\">+</div>\n        <div @click=\"append('0')\" class=\"btn zero\">0</div>\n        <div @click=\"dot\" class=\"btn\">.</div>\n        <div @click=\"endp(current)\" class=\"btn operator\">=</div>\n        <div class=\"displayunder\">{{ ucurrent || '0' }}</div>\n    </div>\n</template>\n\n<script>\nexport default {\n    data(){\n        return{\n            current: '',\n            number1: '',\n            number2: '',\n            operation: '',\n            ucurrent: ''\n        }\n    },\n    methods: {\n        clear() {\n            this.current = '';\n            this.ucurrent = '';\n        },\n        sign() {\n            if(this.current === '' || this.current === '0'){\n                this.current = '';\n            } else if(this.current.charAt(0) === '-'){\n                this.current = this.current.slice(1);\n            } else {\n                this.current = `-${this.current}`;\n            }\n            // this.current = this.current.charAt(0) === '-' ? \n               // this.current.slice(1) : `-${this.current}`;\n        },\n        percent() {\n            this.current = `${parseFloat(this.current) / 100}`;\n        },\n        append(number) {\n            if((this.current === '0' && number === '0') || (this.current === '' && number === '0')){\n                this.current = '';\n            } else {\n                this.current = `${this.current}${number}`;\n            }\n        },\n        dot() {\n            if(this.current.indexOf('.') === -1) {\n                if(this.current === ''){\n                    this.current = '0.';\n                } else {\n                    this.append('.');\n                }\n            }\n        },\n        divide(number) {\n            this.number1 = number;\n            this.operation = '/';\n            this.current = '';\n            this.ucurrent = number;\n        },\n        multip(number) {\n            this.number1 = number;\n            this.operation = '*';\n            this.current = '';\n            this.ucurrent = number;\n        },\n        subst(number) {\n            this.number1 = number;\n            this.operation = '-';\n            this.current = '';\n            this.ucurrent = number;\n        },\n        addit(number) {\n            this.number1 = number;\n            this.operation = '+';\n            this.current = '';\n            this.ucurrent = number;\n        },\n        endp(number) {\n            if(this.operation === '/'){\n                this.current = `${parseFloat(this.number1) / parseFloat(number)}`;\n                this.ucurrent = `${this.number1} / ${number}`;\n            } else if(this.operation === '*'){\n                this.current = `${parseFloat(this.number1) * parseFloat(number)}`;\n                this.ucurrent = `${this.number1} * ${number}`;\n            } else if(this.operation === '-'){\n                this.current = `${parseFloat(this.number1) - parseFloat(number)}`;\n                this.ucurrent = `${this.number1} - ${number}`;\n            } else if(this.operation === '+'){\n                this.current = `${parseFloat(this.number1) + parseFloat(number)}`;\n                this.ucurrent = `${this.number1} + ${number}`;\n            }\n        }\n    }\n}\n</script>\n\n<style scoped>\n.calculator{\n    margin: 0 auto;\n    width: 400px;\n    font-size: 40px;\n    display: grid;\n    grid-template-columns: repeat(4, 1fr);\n    grid-auto-rows: minmax(50px, auto);\n}\n.display{\n    grid-column: 1 / 5;\n    background-color: black;\n    color: white;\n}\n.zero{\n    grid-column: 1 / 3;\n}\n.btn{\n    background-color: #f2f2f2;\n    border: 1px solid #333;\n    cursor: pointer\n}\n.operator{\n    background-color: orange;\n}\n.displayunder{\n    grid-column: 1 / 2;\n    background-color: darkgray;\n    color: white;\n}\n</style>"]}]}